name: Code Quality & Security

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    - cron: '0 4 * * 1'  # Run every Monday at 4 AM UTC for regular scans

jobs:
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript, typescript, python
          
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
          
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:javascript,typescript,python"
  
  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for proper SCM analysis
        
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@master
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=cherry
            -Dsonar.qualitygate.wait=true
            -Dsonar.qualitygate.timeout=300
            -Dsonar.coverage.exclusions=**/node_modules/**,**/dist/**,**/build/**,**/*.test.js,**/*.spec.js
            -Dsonar.sourceEncoding=UTF-8
      
  checkov:
    name: Checkov IaC Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install Checkov
        run: pip install checkov
        
      - name: Run Checkov
        run: |
          checkov \
            --framework terraform,cloudformation,kubernetes,dockerfile,helm \
            --skip-check CKV_AWS_123,CKV_GCP_45 \
            --output cli,json,junitxml \
            --output-file-path ./reports/checkov \
            --soft-fail false \
            --baseline ./security/checkov_baseline.json || true
            
      - name: Upload Checkov results
        uses: actions/upload-artifact@v3
        with:
          name: checkov-results
          path: ./reports/checkov
          
  summary:
    name: Security & Quality Summary
    runs-on: ubuntu-latest
    needs: [codeql, sonarqube, checkov]
    if: always()
    
    steps:
      - name: Check job status
        run: |
          if [[ "${{ needs.codeql.result }}" == "failure" || "${{ needs.sonarqube.result }}" == "failure" || "${{ needs.checkov.result }}" == "failure" ]]; then
            echo "One or more security scans failed"
            exit 1
          else
            echo "All security scans completed successfully or with warnings"
          fi
